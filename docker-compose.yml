version: '3.8'

services:
  # Backend (Python Flask)
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8001:5000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@postgres:5432/analytics_db}
      - NEO4J_URI=${NEO4J_URI:-bolt://host.docker.internal:7687}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - N8N_BASE_URL=${N8N_BASE_URL:-http://host.docker.internal:5678}
      - N8N_API_KEY=${N8N_API_KEY:-default_key}
      - N8N_WORKFLOW_ID=${N8N_WORKFLOW_ID:-default_workflow}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_for_sessions}
      - DEBUG=${DEBUG:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - ./reports:/app/reports
    extra_hosts:
    - "host.docker.internal:host-gateway"

  # Database PostgreSQL
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-analytics_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "25432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-analytics_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge

# Note: Neo4j and n8n are expected to be external services
# Make sure they are accessible at the configured URIs
